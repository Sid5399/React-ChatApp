[{"C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\index.js":"1","C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\App.js":"3","C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\components\\Chat.js":"4","C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\components\\Sidebar.js":"5","C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\components\\SidebarChat.js":"6","C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\firebase.js":"7","C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\components\\Login.js":"8","C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\reducer.js":"9","C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\StateProvider.js":"10","C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\components\\Navbar.js":"11"},{"size":681,"mtime":1627297350899,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1626969412160,"results":"14","hashOfConfig":"13"},{"size":1223,"mtime":1627395548981,"results":"15","hashOfConfig":"13"},{"size":4566,"mtime":1627396011040,"results":"16","hashOfConfig":"13"},{"size":1514,"mtime":1627396006023,"results":"17","hashOfConfig":"13"},{"size":1752,"mtime":1627391646785,"results":"18","hashOfConfig":"13"},{"size":709,"mtime":1627290065729,"results":"19","hashOfConfig":"13"},{"size":1169,"mtime":1627398294680,"results":"20","hashOfConfig":"13"},{"size":518,"mtime":1627371186710,"results":"21","hashOfConfig":"13"},{"size":472,"mtime":1627297303621,"results":"22","hashOfConfig":"13"},{"size":1970,"mtime":1627447550925,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1so71sm",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\index.js",[],["51","52"],"C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\App.js",["53"],"import React from 'react';\r\nimport './App.css';\r\nimport Sidebar from './components/Sidebar';\r\nimport Chat from './components/Chat';\r\nimport { BrowserRouter as Router,Switch, Route} from 'react-router-dom';\r\nimport { useStateValue } from './StateProvider';\r\nimport Login from './components/Login'\r\nimport Navbar from './components/Navbar';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [{user}, dispatch] = useStateValue();\r\n\r\n  return (\r\n    <div className=\"app\">\r\n\r\n      {\r\n        !user ? \r\n        ( <Login/>)\r\n        :\r\n        (\r\n            <div className=\"app_container\">\r\n              <div className=\"navBar_container\">\r\n                <Navbar/>\r\n              </div> \r\n            \r\n            <div className=\"app_body\">\r\n        \r\n              <Router>\r\n              <Sidebar/>\r\n                  <Switch>\r\n                    <Route path=\"/rooms/:roomId\">\r\n                      <Chat/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                      <Chat/>\r\n                    </Route>              \r\n              </Switch>            \r\n              </Router>\r\n              \r\n            </div> \r\n\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\components\\Chat.js",["54","55","56"],"import React from 'react'\r\nimport './Chat.css';\r\nimport {Avatar, IconButton} from '@material-ui/core';\r\nimport {AttachFile, MoreVert, SearchOutlined} from '@material-ui/icons';\r\n// import MicIcon from '@material-ui/icons/Mic';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\n// import SendIcon from '@material-ui/icons/Send';\r\nimport ExpandLessSharpIcon from '@material-ui/icons/ExpandLessSharp';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\n// import { Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from '../firebase';\r\nimport {useStateValue} from \"../StateProvider\";\r\nimport firebase from 'firebase';\r\n\r\n\r\nfunction Chat() {\r\n  const [seed,setSeed] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const {roomId} = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [{user}, dispatch] = useStateValue();\r\n\r\n  useEffect(()=>{\r\n    if(roomId){\r\n        db.collection('Rooms').doc(roomId).onSnapshot(snapshot => {\r\n            setRoomName(snapshot.data().name);\r\n        });\r\n\r\n        // console.log(roomName)\r\n        db.collection('Rooms').doc(roomId).collection(\"messages\").orderBy(\"timestamp\",\"asc\").onSnapshot(snapshot => {\r\n            setMessages(snapshot.docs.map(doc => doc.data()))\r\n        });\r\n\r\n    }\r\n},[roomId])\r\n\r\n\r\n  useEffect( ()=> {\r\n    setSeed(Math.floor(Math.random() *5000));\r\n  },[roomId]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    \r\n    console.log(\" You typed >>>\", input);\r\n\r\n    \r\n\r\n    if (input != \"\") {\r\n      db.collection('Rooms').doc(roomId).collection('messages').add({\r\n        message: input,\r\n        name: user.displayName,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    } else {\r\n      console.log(\"Empty message\")\r\n    }\r\n    setInput(\"\");\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n\r\n      <div className=\"chat_window\">\r\n        <div className=\"chat_header\">\r\n          <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n\r\n          <div className=\"chat_headerInfo\">\r\n            <h3 className=\"chat-room-name\">{roomName}</h3>\r\n            <p className=\"chat-room-last-seen\"> \r\n                {\r\n                 messages.length > 0 ?  \r\n                 \"Last seen: \" + \r\n                new Date(\r\n                    messages[messages.length - 1]?.\r\n                    timestamp?.toDate()\r\n                ).toUTCString()\r\n                 : \" No messages available yet\"\r\n                }\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"chat_headerRight\">\r\n            <IconButton>\r\n              <SearchOutlined />\r\n            </IconButton>\r\n            <IconButton>\r\n              <AttachFile />\r\n            </IconButton>\r\n            <IconButton>\r\n              <MoreVert />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat_body\">\r\n\r\n          {messages.map((message) => (\r\n            <p key={message.id} className={`chat_message ${message.name === user.displayName && \"chat_receiver\"}`}>\r\n              <span className=\"chat_name\">{message.name}</span>\r\n              {message.message}\r\n              <span className=\"chat_timestamp\">\r\n                {new Date(message.timestamp?.toDate()).toUTCString()}\r\n              </span>\r\n            </p>                               \r\n          ))}\r\n\r\n          {/* <button className=\"scroll_downBtn\">down</button>  */}\r\n        </div>\r\n\r\n        <div className=\"chat_footer\">\r\n          <form onSubmit={sendMessage} \r\n               className=\"message_form\">\r\n            <button className=\"emoji_button\">\r\n              <InsertEmoticonIcon />\r\n            </button>\r\n            <input\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Type a message\"\r\n            />\r\n            {/* <MicIcon /> */}\r\n            <button className=\"emoji_button2\">\r\n              <AttachFileIcon />\r\n            </button>\r\n            <button\r\n              className=\"form_sendButton\"\r\n              type=\"submit\"\r\n              onClick={sendMessage}\r\n            >\r\n              Send\r\n            </button>\r\n          </form>\r\n\r\n          <button className=\"sendButton\" onClick={sendMessage}>\r\n            <ExpandLessSharpIcon />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Chat\r\n","C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\components\\Sidebar.js",["57","58","59","60","61"],"import React from 'react';\r\nimport {useState,useEffect} from 'react'\r\nimport './Sidebar.css'; \r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport {SearchOutlined, Settings} from \"@material-ui/icons\";\r\nimport db from '../firebase';\r\nimport SidebarChat from './SidebarChat'\r\nimport { useStateValue } from '../StateProvider';\r\n// import PersonAddIcon from '@material-ui/icons/PersonAdd';\r\n\r\n\r\nfunction Sidebar() {\r\n\r\n  const [rooms,setRooms] = useState([]);\r\n  const [{user}, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n     const unsubscribe = db.collection('Rooms').onSnapshot(snapshot => (\r\n        setRooms(\r\n          snapshot.docs.map(doc => (\r\n            {\r\n                id: doc.id,\r\n                data: doc.data(),\r\n            }\r\n        )\r\n\r\n        ))\r\n    ));\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    }\r\n},[]); \r\n\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {/* <div className=\"sidebar_header\">\r\n\r\n\r\n      </div> */}\r\n\r\n      <div className=\"sidebar_search\">\r\n        <div className=\"sidebar_searchContainer\">\r\n          <SearchOutlined />\r\n          <input type=\"text\" placeholder=\"SEARCH\" />\r\n          \r\n        </div>\r\n        <SidebarChat class=\"addChat_Btn\" addNewChat />\r\n      </div>\r\n\r\n      <div className=\"sidebar_chats\">\r\n        {/* <SidebarChat addNewChat /> */}\r\n        {rooms.map((room) => (\r\n          <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\components\\SidebarChat.js",[],"C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\firebase.js",[],"C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\components\\Login.js",["62"],"import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './Login.css';\r\nimport {auth,provider} from '../firebase';\r\nimport { actionTypes } from '../reducer';\r\nimport { useStateValue } from '../StateProvider';\r\n\r\nfunction Login() {\r\n    const [{}, dispatch] = useStateValue();\r\n    const signIn = () => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then((result) => \r\n            {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                });\r\n            })\r\n            // console.log(result))\r\n            .catch((error) => alert(error.message));\r\n    };\r\n    \r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"login_container\">\r\n          <img\r\n            src=\"http://getdrawings.com/free-icon/waffle-icon-73.png\"\r\n            alt=\"img0\"\r\n          />\r\n          <div className=\"login_text\">\r\n            <h1>Sign in to Waffles</h1>\r\n          </div>\r\n          <Button type=\"submit\" onClick={signIn}>\r\n            Sign in With Google\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Login","C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\reducer.js",[],"C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\StateProvider.js",[],"C:\\Users\\Admin\\React-CProject\\React-ChatApp\\waffles_frontend\\src\\components\\Navbar.js",["63","64","65","66","67","68","69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":13,"column":18,"nodeType":"76","messageId":"77","endLine":13,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":24,"column":18,"nodeType":"76","messageId":"77","endLine":24,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":52,"column":15,"nodeType":"80","messageId":"81","endLine":52,"endColumn":17},{"ruleId":"82","severity":1,"message":"83","line":79,"column":50,"nodeType":"84","messageId":"85","endLine":79,"endColumn":52,"fix":"86"},{"ruleId":"74","severity":1,"message":"87","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":16},{"ruleId":"74","severity":1,"message":"88","line":4,"column":18,"nodeType":"76","messageId":"77","endLine":4,"endColumn":28},{"ruleId":"74","severity":1,"message":"89","line":5,"column":25,"nodeType":"76","messageId":"77","endLine":5,"endColumn":33},{"ruleId":"74","severity":1,"message":"90","line":15,"column":11,"nodeType":"76","messageId":"77","endLine":15,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":15,"column":18,"nodeType":"76","messageId":"77","endLine":15,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":9,"column":12,"nodeType":"93","messageId":"81","endLine":9,"endColumn":14},{"ruleId":"74","severity":1,"message":"94","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":16},{"ruleId":"74","severity":1,"message":"95","line":7,"column":8,"nodeType":"76","messageId":"77","endLine":7,"endColumn":24},{"ruleId":"74","severity":1,"message":"96","line":8,"column":8,"nodeType":"76","messageId":"77","endLine":8,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":12,"column":18,"nodeType":"76","messageId":"77","endLine":12,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":26,"column":17,"nodeType":"99","endLine":26,"endColumn":46},{"ruleId":"97","severity":1,"message":"98","line":31,"column":17,"nodeType":"99","endLine":31,"endColumn":46},{"ruleId":"97","severity":1,"message":"98","line":36,"column":17,"nodeType":"99","endLine":36,"endColumn":46},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"102","text":"103"},"'Avatar' is defined but never used.","'IconButton' is defined but never used.","'Settings' is defined but never used.","'user' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'HomeIcon' is defined but never used.","'ContactPhoneIcon' is defined but never used.","'InfoIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",[2489,2513],"\r\n                    ?."]